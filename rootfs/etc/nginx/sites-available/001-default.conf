# Set https to 'on' if x-forwarded-proto is https
map $http_x_forwarded_proto $fcgi_https {
    default off;
    https on;
}

server {
    listen 80 default_server;
    listen [::]:80;
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    ssl_certificate ssl/server.crt;
    ssl_certificate_key ssl/server.key;

    access_log /dev/fd/1 main;
    access_log /var/log/nginx/access.log main;
    error_log /dev/fd/2;
    error_log /var/log/nginx/error.log;

    server_name _;
    root /var/www/public/$host;
    index index.php index.html index.htm;

    set $skip_cache #SKIP_CACHE#;
    set $skip_cache_m 0;
    set $rt_session "";

    # HSTS Protection
    add_header Strict-Transport-Security "max-age=31536000" always;
    add_header X-XSS-Protection "1; mode=block; report=/xss/report" always;
    add_header X-Content-Type-Options "nosniff" always;

    # POST requests and urls with a query string should always go to PHP
    if ($request_method = POST) {
        set $skip_cache 1;
        set $skip_cache_m 1;
    }

    # Don't cache uris containing the following segments
    if ($request_uri ~* "/wp-admin.*|/checkout.*|/account.*|/myaccount.*|/cart.*|/addons.*|/wc-api.*|/logout.*|/lost-password.*/xmlrpc.php|/wp-(app|cron|login|register|mail).php|wp-.*.php|/feed/|index.php|wp-comments-popup.php|wp-links-opml.php|sitemap(_index)?.xml|a-z0-9_-]+-sitemap([0-9]+)?.xml)" {
        set $skip_cache 1;
        set $skip_cache_m 1;
    }

    # Don't use the cache if wordpress tells so
    if ($http_cookie ~* "wordpress_no_cache|wp-postpass") {
        set $skip_cache 1;
        set $skip_cache_m 2;
    }

    # Don't cache when adding to cart
    if ($arg_add-to-cart != "") {
        set $skip_cache 1;
        set $skip_cache_m 3;
    }

    # Don't cache if user is logged in
    if ($http_cookie ~* "wordpress_logged_in_([0-9a-zA-Z]+)=(.*);?") {
        set $skip_cache 1;
        set $skip_cache_m 4;
    }

    # EDD plugin
    if ($http_cookie ~* "edd") {
        set $skip_cache 1;
        set $skip_cache_m 2;
    }

    if ($arg_edd_action != "") {
        set $skip_cache 1;
        set $skip_cache_m 3;
    }

    location ~ ^.*/xmlrpc\.php.* {
        return 418 'I\'m a teapot!';
    }

#    location ~ ^.*/wp-json/.* {
#        set $teapot 1;
#        if ($http_cookie ~* "wordpress_logged_in_([0-9a-zA-Z]+)=(.*);?") {
#            set $teapot 0;
#        }
#        if ($request_uri ~* "^/wp-json/contact-form-7/.*") {
#            set $teapot 0;
#        }
#        if ($teapot = 1) {
#            return 418 'I\'m a teapot!';
#        }
#
#        recursive_error_pages off;
#        error_page 404 = /index.php$is_args$args;
#        try_files $uri $uri/ $uri.html /index.php$is_args$args;
#    }

    location ~ ^.*/(blank|inv)\.gif$ {
        expires 1y;
        empty_gif;
        recursive_error_pages off;
        error_page 404 = /index.php$is_args$args;
        try_files $uri $uri/ $uri.html /index.php$is_args$args;
    }

    location ~ .*\.(eot|ttf|otf|woff|woff2)$ {
        add_header 'Access-Control-Allow-Origin' '*';
        expires 1y;
        recursive_error_pages off;
        error_page 404 = /index.php$is_args$args;
        try_files $uri $uri/ $uri.html /index.php$is_args$args;
    }

    location ~ .*\.(webp|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|pdf|ppt|txt|tar|mid|midi|wav|bmp|rtf|js|css)$ {
        expires 1y;
        recursive_error_pages off;
        error_page 404 = /index.php$is_args$args;
        try_files $uri $uri/ $uri.html /index.php$is_args$args;
    }

    location ~ /.well-known {
        allow all;
    }

    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    #WORDPRESS_SUBFOLDERS_HERE#

    location / {
	limit_req zone=defcon1 burst=10 nodelay;
        recursive_error_pages off;
        error_page 404 = /index.php$is_args$args;
        try_files $uri $uri/ $uri.html /index.php$is_args$args;
    }

    location ~ \.php(/|$) {
	limit_req zone=defcon1 burst=10 nodelay;
        recursive_error_pages off;
        error_page 404 = /index.php$is_args$args;
        try_files $uri $uri/ $uri.html /index.php$is_args$args;

        if ($http_x_disable_cache)  {
            set $skip_cache 1;
        }

        if  ($http_x_force_cache)   {
            set $skip_cache 0;
        }

	# Fastcgi cache settings
        fastcgi_cache php;
        fastcgi_cache_valid 200 #CACHE_200_MINUTES#m;
        fastcgi_cache_bypass $skip_cache;
        fastcgi_no_cache $args $skip_cache;
        fastcgi_cache_purge $purge_method;

        # Fastcgi settings
        include fastcgi_params;
        fastcgi_index index.php;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        fastcgi_param SERVER_NAME $host;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param HTTPS $fcgi_https;
        fastcgi_connect_timeout 60s;
        fastcgi_read_timeout 600s;

        fastcgi_pass 127.0.0.1:9000;

        #internal;

        add_header Via $hostname;
        add_header X-Cache-Status $upstream_cache_status;
        add_header X-Cache-S-M $skip_cache_m;
        add_header Strict-Transport-Security "max-age=31536000" always;
        add_header X-XSS-Protection "1; mode=block; report=/xss/report" always;
        add_header X-Content-Type-Options "nosniff" always;

        # Do not send set-cookie if content is cached
        if ($skip_cache = 0) {
            more_clear_headers 'Set-Cookie';
        }
    }

    location /server-status {
        stub_status on;
        access_log   off;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        allow 169.254.0.0/16;
        allow 127.0.0.1;
        deny all;
    }

    location ~ ^/(status|ping)$ {
        access_log off;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        allow 169.254.0.0/16;
        allow 127.0.0.1;
        deny all;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_pass 127.0.0.1:9000;
    }
}
